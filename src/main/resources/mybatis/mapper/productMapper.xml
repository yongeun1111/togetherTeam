<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.togetherTeam.platform.mapper.productMapper">

	<!-- proList.jsp 진입 전체 상품 불러오기  -->
	<select id="getAllList" parameterType="com.togetherTeam.platform.entity.PageMakerList" resultType="com.togetherTeam.platform.entity.Product">
	 	SELECT *
		  FROM(SELECT PRO_NO,
          	          SELLER_MEM_NO,
                      PRO_TITLE,
                 	  PRO_CATEGORY,
               		  PRO_NAME,
               		  PRO_THEME,
               		  BUY_DATE,
               		  PRO_BUY_PRICE,
               		  PRO_SALE_PRICE,
               		  PRO_CONTENT,
               		  PRO_DATE,
               		  PRO_SALE,
               		  BUYER,
               		  DEAL_DATE,
               		  PRO_LIKE,
               		  ROWNUM as RNUM
                 FROM (SELECT *
            			 FROM PRODUCT
        			    ORDER BY PRO_NO DESC))
   		 WHERE RNUM BETWEEN #{startPage}+1 and #{endPage}
	</select>
	
	<!-- proList.jsp 진입 전체 상품 불러오기 (최신순)  -->
	<select id="getAllListRecent" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 ORDER BY pro_date DESC
	</select>	
	
	<!-- proList.jsp 진입 전체 상품 불러오기 (인기순) -->
	<select id="getAllListLike" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 ORDER BY pro_like DESC
	</select>
	
	<!-- proList.jsp 카테고리별 상품 불러오기 -->
	<select id="getCategoryList" parameterType="String" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 WHERE pro_category = #{category}
	</select>
	
	<!-- proList.jsp 카테고리별 상품 불러오기 (최신순) -->
	<select id="getCategoryListRecent" parameterType="String" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 WHERE pro_category = #{category}
		 ORDER BY pro_date DESC
	</select>

	<!-- proList.jsp 카테고리별 상품 불러오기 (인기순) -->
	<select id="getCategoryListLike" parameterType="String" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 WHERE pro_category = #{category}
		 ORDER BY pro_like DESC
	</select>

	<!-- registration.jsp 상품 등록하기 -->
	<insert id="productRegister" parameterType="com.togetherTeam.platform.entity.Product">
		<selectKey resultType="int" keyProperty="pro_no" order="AFTER">
			select max(pro_no) from product
		</selectKey>
		
		insert into product(seller_mem_no, pro_title, pro_category, pro_name, pro_theme, buy_date, pro_buy_price, pro_sale_price, pro_content)
		values (#{seller_mem_no}, #{pro_title}, #{pro_category}, #{pro_name}, #{pro_theme}, #{buy_date}, #{pro_buy_price}, #{pro_sale_price}, #{pro_content})
	
	</insert>
	
	<select id="searchProduct" parameterType="String" resultType="com.togetherTeam.platform.entity.Product">
		SELECT *
		  FROM product
		 WHERE pro_title like '%'||#{query}||'%'
		    OR pro_name like '%'||#{query}||'%'
		    OR pro_category like '%'||#{query}||'%'
	</select>
	
	<select id="totalCount" resultType="int">
    	SELECT COUNT(*)
    	  FROM product
    </select> 
	
	<!-- 이미지 정보 등록하기 -->
	<insert id="imageEnroll" parameterType="com.togetherTeam.platform.entity.Image">
		insert into image(pro_no, upload_path, uuid, file_name)
		values (#{pro_no}, #{upload_path}, #{uuid}, #{file_name})
	</insert>

	<!-- 채팅 테스트 -->
	<select id='test' resultType="com.togetherTeam.platform.entity.Product">
		SELECT a.*, b.mem_id
  		  FROM product a INNER JOIN member b
    	    ON a.seller_mem_no = b.mem_no
 		 WHERE a.pro_no = 30
	</select>
	
	<!-- 회원이 등록한 상품 리스트, 이미지 하나씩 가져오기 -->
	<!-- ROW_NUMBER() OVER (PARTITION BY a.pro_no ORDER BY a.pro_no DESC) AS RN
		: 조인 후 a.pro_no로 그룹화하고 a.pro_no을 기준으로 내림차순 정렬 후 RN 생성 -->
	<select id="getMemProductList" parameterType="Map" resultType="com.togetherTeam.platform.entity.Product">
	
    	SELECT *
			FROM(
				SELECT T.*, ROWNUM AS RNUM
				FROM (
  					SELECT S.*
  					FROM (
    					SELECT a.seller_mem_no, a.pro_no, a.pro_title, b.upload_path, b.uuid, b.file_name, a.pro_category, a.pro_name, a.maker, a.pro_sale_price, a.pro_sale,
      						ROW_NUMBER() OVER (PARTITION BY a.pro_no ORDER BY a.pro_no DESC) AS RN
    					FROM product a LEFT OUTER JOIN image b ON a.pro_no = b.pro_no
    					WHERE a.seller_mem_no = #{mem_no}
    					ORDER BY pro_no DESC
  					) S
				) T
        	WHERE RN=1
        	)
		WHERE RN=1 and RNUM BETWEEN #{cri.pageStart}+1 AND #{cri.pageEnd}
  		
	</select>
	
	<!-- 상품 총 개수 -->
  	<select id="memProTotalCount" parameterType="com.togetherTeam.platform.entity.Member" resultType="int">
  	
  		select count(*) from product where seller_mem_no = #{mem_no}

  	</select>
	
</mapper>